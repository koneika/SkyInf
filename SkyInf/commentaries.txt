









    # print(real_time_float)
    # if real_time == int(time.time()):
    #     counter += 1
    #     # for i in range():
    # else:
    #     # for beautiful show my fps counter and etc.
    #     os.system("cls")
    #     os.system("clear")

    #     print("fps: ", counter)
    #     counterForAverage += 1
    #     counterForAverage2 += counter
    #     counter = 0
    #     real_time += 1
    #     print("average fps: ", counterForAverage2/counterForAverage)
    #     print("coordinates: ", x, y)








 #real_time_float2 = time.time()

    # print(real_time_float2, "==", real_time_float + 0.25)

    print("hi")
    #     os.system("cls")
    #     os.system("clear")
    #     print(real_time_float2, "==", real_time_float + 0.25)
    # else:
    #     real_time_float += 0.25









# from OpenGL.GL import *
# from OpenGL.GLUT import *
# from OpenGL.GLU import *










# updateMatrix(firstSize, secondSize)
# def updateMatrix(firstVariable, secondVariable):
#     for i in range(0, firstVariable):
#         for j in range(0, secondVariable):
#             pass

# createIntMatrix(firstSize, secondSize)









# createIntMatrixAndPutValue(firstSize, secondSize, yourValue)
# def createIntMatrixAndPutValue(firstVariable, secondVariable, value):
#     Matrix = createIntMatrix(firstVariable, secondVariable)
#     for i in range(0, firstVariable):
#         for j in range(0, secondVariable):
#             Matrix[i, j] = value
#     return Matrix

# frameRate(60)
# def frameRate(variable):
#     time.sleep(variable/1000)




# def fpsCounter(putConstIntTimeTime, counter, counterForAverage, counterForAverage2):
#     if putConstIntTimeTime == int(time.time()):
#         counter += 1
#         # for i in range():
#     else:
#         print("fps: ", float(counter))
#         counterForAverage += 1
#         counterForAverage2 += counter
#         counter = 0
#         putConstIntTimeTime += 1
#         print("average fps: ", counterForAverage2/counterForAverage)











# def init():
#     glClearColor(0.0, 0.0, 0.0, 1.0)  # Устанавливаем цвет фона
#     glOrtho(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0)  # Устанавливаем проекцию

# def draw_line():
#     glClear(GL_COLOR_BUFFER_BIT)  # Очищаем буфер цвета
#     glBegin(GL_LINES)  # Начинаем рисование линии
#     glColor3f(1.0, 1.0, 1.0)  # Устанавливаем цвет линии (белый)
#     glVertex2f(-0.5, -0.5)  # Начальная точка линии
#     glVertex2f(0.5, 0.5)  # Конечная точка линии
#     glEnd()  # Завершаем рисование линии
#     glFlush()  # Применяем все выполненные команды к графике

# def main():
#     glutInit()  # Инициализация GLUT
#     glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
#     glutInitWindowSize(500, 500)
#     glutCreateWindow(b"OpenGL Line")

#     init()
#     while True:
#         for i in range(int(math.pow(2, 10))):
#             draw_line()  # Рисуем линию в бесконечном цикле
#         fpsCounter()

# if __name__ == "__main__":
#     main()
    # следующий этап, убрать все комментарии!!! очистить код, сделать его уже чище!!!








# we create matrix
# map = createIntMatrixAndPutValue(100, 100, 1)
# print(map)
# fpsCounter(constTime, 0, 0, 0)

# fpsCounter(not function)

# real_time = int(time.time())
# counter = 0
# counterForAverage = 0
# counterForAverage2 = 0

# counter, counterForAverage, counterForAverage2 = 0, 0, 0

# pygame.init()

# for i in range(0, 100):
#     for j in range(0, 100):
#         map[i, j] = 0

# while True:
#     time.sleep(0.01)

# pygame.init()

# for j in range(0, 100):
#     for i in range(0, 100):
#         if i == 100-1:
#             pass
